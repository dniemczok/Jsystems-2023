pipeline {
    agent {
        node {
            label 'slave01'
            }
    }
    environment {
        DISABLE_AUTH = 'true'
        DB_ENGINE    = 'sqlite'
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '7', artifactNumToKeepStr: '7'))
        timeout(time: 5)
        timestamps ()
    }
    stages {
        stage('Build') {
            options {
              timeout(time: 30)  // timeout on this stage
              timestamps ()
            }
            steps {
                input 'Zaakceptuj'
                echo "Database engine is ${DB_ENGINE}"
                echo "DISABLE_AUTH is ${DISABLE_AUTH}"
                echo "${env.JENKINS_URL}"
            }
        }
        stage('Check maven version') {
            agent {
                docker { image 'maven:3-alpine' }
            }
            options {
              timestamps ()
            }
            steps {
                sh 'mvn --version'
            }
        }
        stage('Check java version') {
            agent {
                docker { image 'openjdk:8-jre' }
            }
            options {
              timestamps ()
            }
            steps {
                sh 'java -version'
            }
        }
        
                stage('Build') {
            steps {
                sh 'echo "Building the application"'
                // Add commands to build application
            }
        }
        stage('Test') {
            parallel {
                stage('Unit Tests') {
                    steps {
                        sh 'sleep 5s'
                        sh 'echo "Running unit tests"'
                        // Add commands to run unit tests
                    }
                }
                stage('Integration Tests') {
                    steps {
                        sh 'echo "Running integration tests"'
                        // Add commands to run integration tests
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                sh 'echo "Deploying the application"'
                // Add commands to deploy application
            }
        }
    }
}
        
        stage('Clear') {
            steps {
                step([$class: 'WsCleanup'])
            }
        }

    }
}
